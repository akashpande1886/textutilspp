{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akash\\\\Desktop\\\\React\\\\textutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar.js\";\nimport TextForm from \"./components/TextForm.js\";\nimport Alert from \"./components/Alert.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setTimeout(() => {\n      setAlert({\n        msg: message,\n        type: type\n      });\n    }, 1500);\n    setAlert({\n      msg: message,\n      type: type\n    });\n  };\n  const toggleDarkMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      about: \"About Us\",\n      mode: mode,\n      toggleDarkMode: toggleDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"QWu0QpbEF50KcvttgEfF5q8xP20=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Navbar","TextForm","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","setTimeout","msg","toggleDarkMode","document","body","style","backgroundColor","children","title","about","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/Akash/Desktop/React/textutils/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar.js\";\n\nimport TextForm from \"./components/TextForm.js\";\nimport Alert from \"./components/Alert.js\";\n\nfunction App() {\n  const [mode,setMode]=useState('light');\nconst [alert,setAlert]= useState(null);\nconst showAlert = (message,type)=>{\n  setTimeout(() => {\n    setAlert({\n      msg:message,\n      type:type\n    })\n  }, 1500);\n\n  setAlert({\n    msg:message,\n    type:type\n  })\n\n}\n  const toggleDarkMode=()=>{\n    if(mode ==='light'){\n      setMode ('dark');\n      document.body.style.backgroundColor='grey';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n    }else{\n      setMode('light');\n        document.body.style.backgroundColor='white';\n        showAlert(\"Light mode has been enabled\",\"success\");\n    }\n  }\n  return (\n    <>\n      <Navbar title=\"TextUtils\" about=\"About Us\" mode={mode} toggleDarkMode={toggleDarkMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container\" >\n        <TextForm />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,wBAAwB;AAE3C,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,KAAK,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAACX,QAAQ,CAAC,OAAO,CAAC;EACxC,MAAM,CAACY,KAAK,EAACC,QAAQ,CAAC,GAAEb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMc,SAAS,GAAGA,CAACC,OAAO,EAACC,IAAI,KAAG;IAChCC,UAAU,CAAC,MAAM;MACfJ,QAAQ,CAAC;QACPK,GAAG,EAACH,OAAO;QACXC,IAAI,EAACA;MACP,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;IAERH,QAAQ,CAAC;MACPK,GAAG,EAACH,OAAO;MACXC,IAAI,EAACA;IACP,CAAC,CAAC;EAEJ,CAAC;EACC,MAAMG,cAAc,GAACA,CAAA,KAAI;IACvB,IAAGT,IAAI,KAAI,OAAO,EAAC;MACjBC,OAAO,CAAE,MAAM,CAAC;MAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,MAAM;MAC1CT,SAAS,CAAC,4BAA4B,EAAC,SAAS,CAAC;IACnD,CAAC,MAAI;MACHH,OAAO,CAAC,OAAO,CAAC;MACdS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,OAAO;MAC3CT,SAAS,CAAC,6BAA6B,EAAC,SAAS,CAAC;IACtD;EACF,CAAC;EACD,oBACET,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACEnB,OAAA,CAACJ,MAAM;MAACwB,KAAK,EAAC,WAAW;MAACC,KAAK,EAAC,UAAU;MAAChB,IAAI,EAAEA,IAAK;MAACS,cAAc,EAAEA;IAAe;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACxFzB,OAAA,CAACF,KAAK;MAACS,KAAK,EAAEA;IAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACtBzB,OAAA;MAAK0B,SAAS,EAAC,WAAW;MAAAP,QAAA,eACxBnB,OAAA,CAACH,QAAQ;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA,eACN,CAAC;AAEP;AAACrB,EAAA,CArCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
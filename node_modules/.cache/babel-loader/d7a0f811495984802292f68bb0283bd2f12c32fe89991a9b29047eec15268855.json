{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akash\\\\Desktop\\\\React\\\\textutils\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const handleUpClick = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n  const handleLoClick = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n  };\n  const handleCleClick = () => {\n    let newText = \"\";\n    setText(newText);\n  };\n  const handleOnChange = event => {\n    setText(event.target.value);\n  };\n  const [text, setText] = useState(\"Enter text here\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        htmlFor: \"floatingTextarea\",\n        children: \"Enter text to analyse below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control mb-3\",\n        value: text,\n        onChange: handleOnChange,\n        id: \"floatingTextarea\",\n        style: {\n          backgroundColor: props.mode === 'dark' ? 'grey' : 'white'\n        },\n        rows: \"8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary  \",\n      onClick: handleUpClick,\n      children: \"Convert to Uppercase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary mx-2 \",\n      onClick: handleLoClick,\n      children: \"Convert to Lowercase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary mx-2 \",\n      onClick: handleCleClick,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your text summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", text.split(\" \").length, \" words \", text.length - text.split(\" \").length + 1, \" characters\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 1\n    }, this), text]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 6\n  }, this);\n}\n_s(TextForm, \"cyRA+wM30maxU5PkXk20ENEQ1FU=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TextForm","props","_s","handleUpClick","newText","text","toUpperCase","setText","handleLoClick","toLowerCase","handleCleClick","handleOnChange","event","target","value","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","className","style","color","mode","htmlFor","onChange","id","backgroundColor","rows","onClick","split","length","_c","$RefreshReg$"],"sources":["C:/Users/Akash/Desktop/React/textutils/src/components/TextForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n  };\r\n  const handleLoClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n  };\r\n  const handleCleClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"Enter text here\");\r\n\r\n  return (\r\n     <div >\r\n      <h1>{props.heading}</h1>\r\n\r\n      <div className=\"mb-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n        <h1 htmlFor=\"floatingTextarea\">Enter text to analyse below</h1>\r\n\r\n        <textarea\r\n          className=\"form-control mb-3\"\r\n          value={text}\r\n          onChange={handleOnChange}\r\n          id=\"floatingTextarea\"\r\n          style={{backgroundColor:props.mode==='dark'?'grey':'white'}}\r\n          rows=\"8\"\r\n        ></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary  \" onClick={handleUpClick}>\r\n        Convert to Uppercase\r\n      </button>  \r\n      <button className=\"btn btn-primary mx-2 \" onClick={handleLoClick}>\r\n        Convert to Lowercase\r\n      </button>\r\n      <button className=\"btn btn-primary mx-2 \" onClick={handleCleClick}>\r\n        Clear\r\n      </button>\r\n      <h2>Your text summary</h2>\r\n<p> {text.split(\" \").length} words {text.length-text.split(\" \").length+1} characters</p>\r\n      {text}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
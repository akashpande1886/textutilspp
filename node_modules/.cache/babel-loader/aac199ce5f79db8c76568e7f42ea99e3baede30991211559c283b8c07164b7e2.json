{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akash\\\\Desktop\\\\React\\\\textutils\\\\src\\\\components\\\\ImageCover.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ImageCover() {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n\n    // Load the image\n    const img = new Image();\n    img.src = \"https://via.placeholder.com/600x400\"; // Replace with your image URL\n\n    img.onload = function () {\n      // Draw the image on the canvas\n      ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n      // Cover a part of the image\n      const coverX = 150; // Starting x-coordinate of the cover\n      const coverY = 100; // Starting y-coordinate of the cover\n      const coverWidth = 200; // Width of the cover\n      const coverHeight = 150; // Height of the cover\n\n      ctx.fillStyle = \"rgba(0, 0, 0, 0.5)\"; // Semi-transparent black\n      ctx.fillRect(coverX, coverY, coverWidth, coverHeight); // Draw the rectangle\n    };\n  }, []); // Empty dependency array ensures this runs once after the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cover Part of an Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: \"600\",\n      height: \"400\",\n      style: {\n        border: \"1px solid #000\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageCover, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = ImageCover;\nvar _c;\n$RefreshReg$(_c, \"ImageCover\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","ImageCover","_s","canvasRef","canvas","current","ctx","getContext","img","Image","src","onload","drawImage","width","height","coverX","coverY","coverWidth","coverHeight","fillStyle","fillRect","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","border","_c","$RefreshReg$"],"sources":["C:/Users/Akash/Desktop/React/textutils/src/components/ImageCover.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\n\r\nexport default function ImageCover() {\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    // Load the image\r\n    const img = new Image();\r\n    img.src = \"https://via.placeholder.com/600x400\"; // Replace with your image URL\r\n\r\n    img.onload = function () {\r\n      // Draw the image on the canvas\r\n      ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n\r\n      // Cover a part of the image\r\n      const coverX = 150; // Starting x-coordinate of the cover\r\n      const coverY = 100; // Starting y-coordinate of the cover\r\n      const coverWidth = 200; // Width of the cover\r\n      const coverHeight = 150; // Height of the cover\r\n\r\n      ctx.fillStyle = \"rgba(0, 0, 0, 0.5)\"; // Semi-transparent black\r\n      ctx.fillRect(coverX, coverY, coverWidth, coverHeight); // Draw the rectangle\r\n    };\r\n  }, []); // Empty dependency array ensures this runs once after the component mounts\r\n\r\n  return (\r\n    <div>\r\n      <h1>Cover Part of an Image</h1>\r\n      <canvas\r\n        ref={canvasRef}\r\n        width=\"600\"\r\n        height=\"400\"\r\n        style={{ border: \"1px solid #000\" }}\r\n      ></canvas>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAMC,SAAS,GAAGL,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMO,MAAM,GAAGD,SAAS,CAACE,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;;IAEnC;IACA,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;IACvBD,GAAG,CAACE,GAAG,GAAG,qCAAqC,CAAC,CAAC;;IAEjDF,GAAG,CAACG,MAAM,GAAG,YAAY;MACvB;MACAL,GAAG,CAACM,SAAS,CAACJ,GAAG,EAAE,CAAC,EAAE,CAAC,EAAEJ,MAAM,CAACS,KAAK,EAAET,MAAM,CAACU,MAAM,CAAC;;MAErD;MACA,MAAMC,MAAM,GAAG,GAAG,CAAC,CAAC;MACpB,MAAMC,MAAM,GAAG,GAAG,CAAC,CAAC;MACpB,MAAMC,UAAU,GAAG,GAAG,CAAC,CAAC;MACxB,MAAMC,WAAW,GAAG,GAAG,CAAC,CAAC;;MAEzBZ,GAAG,CAACa,SAAS,GAAG,oBAAoB,CAAC,CAAC;MACtCb,GAAG,CAACc,QAAQ,CAACL,MAAM,EAAEC,MAAM,EAAEC,UAAU,EAAEC,WAAW,CAAC,CAAC,CAAC;IACzD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACElB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BzB,OAAA;MACE0B,GAAG,EAAEvB,SAAU;MACfU,KAAK,EAAC,KAAK;MACXC,MAAM,EAAC,KAAK;MACZa,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAiB;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACvB,EAAA,CArCuBD,UAAU;AAAA4B,EAAA,GAAV5B,UAAU;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}